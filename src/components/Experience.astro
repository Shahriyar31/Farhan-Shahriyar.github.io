---
const experienceData = [
  {
    duration: "August 2025 - Present",
    title: "Working Student - Global IT",
    company: "Nordex SE, Hamburg",
    details: [
      "Developing and maintaining data processing pipelines using modern ETL tools.",
      "Collaborating on cloud infrastructure management and deployment on AWS.",
      "Automating system monitoring and alert tasks using Python and Bash scripts."
    ]
  }
];
---
<section id="experience" class="section">
    <div class="container mx-auto px-4 pr-20 lg:pr-4 py-16">
        <h2 class="text-4xl font-bold uppercase text-center mb-16 text-slate-900 dark:text-white section-title">
            <span>My </span>
            <span class="text-blue-500">Experience</span>
        </h2>
        
        <div class="space-y-8">
            {experienceData.map((item) => (
                <div class="timeline-card group">
                    <div class="card-icon-background">
                        <i class="fa-solid fa-briefcase icon-bg" style="--delay: 0s; --duration: 20s;"></i>
                        <i class="fa-solid fa-server icon-bg" style="--delay: -7s; --duration: 25s;"></i>
                        <i class="fa-solid fa-cloud icon-bg" style="--delay: -12s; --duration: 18s;"></i>
                    </div>

                    <div class="relative z-10">
                        <p class="timeline-duration">{item.duration}</p>
                        <h5 class="text-xl font-semibold uppercase text-slate-800 dark:text-slate-100">{item.title}</h5>
                        <p class="text-lg text-slate-600 dark:text-slate-300 mb-4">{item.company}</p>

                        {item.details && (
                            <ul class="space-y-2 text-left pt-4 mt-4 border-t border-slate-200 dark:border-slate-700">
                                {item.details.map(detail => (
                                    <li class="flex items-start">
                                        <i class="fas fa-caret-right text-blue-500 dark:text-sky-300 mt-1 mr-3 flex-shrink-0"></i>
                                        <span class="text-slate-600 dark:text-slate-400 text-lg">{detail}</span>
                                    </li>
                                ))}
                            </ul>
                        )}
                    </div>
                </div>
            ))}
        </div>
    </div>
</section>

<style>
    @keyframes float-around {
        0%, 100% { transform: translateY(0px) translateX(0px) rotate(0deg); }
        25% { transform: translateY(-10px) translateX(5px) rotate(5deg); }
        50% { transform: translateY(0px) translateX(-5px) rotate(0deg); }
        75% { transform: translateY(10px) translateX(10px) rotate(-5deg); }
    }

    .timeline-card {
        @apply relative p-8 overflow-hidden rounded-2xl
               transition-all duration-300 ease-in-out
               bg-gradient-to-br from-white/40 via-white/20 to-white/40
               dark:from-slate-800/80 dark:via-slate-800/50 dark:to-slate-800/80
               backdrop-blur-lg border border-white/30 dark:border-slate-700;
    }
    .timeline-card:hover {
        transform: translateY(-5px) scale(1.02);
        @apply shadow-2xl border-blue-500/30;
    }
    
    /* This pseudo-element creates the interactive spotlight */
    .timeline-card::after {
        content: '';
        @apply absolute inset-0 z-0 transition-opacity duration-300 opacity-0 group-hover:opacity-100;
        background: radial-gradient(
            circle 400px at var(--mouse-x, -999px) var(--mouse-y, -999px),
            theme('colors.sky.400 / 25%'),
            transparent 70%
        );
    }
    .timeline-duration { 
        @apply px-3 py-1 bg-slate-100 dark:bg-slate-700 text-blue-600 dark:text-blue-300 rounded-full inline-block text-sm uppercase font-semibold mb-3; 
    }
    
    .card-icon-background { @apply absolute inset-0 z-0; }
    .icon-bg {
        @apply absolute text-[6rem] text-slate-200/60 dark:text-slate-900/40;
        animation: float-around linear infinite;
        animation-duration: var(--duration);
        animation-delay: var(--delay);
    }
    .icon-bg:nth-of-type(1) { @apply top-[10%] left-[65%]; }
    .icon-bg:nth-of-type(2) { @apply top-[50%] left-[10%]; }
    .icon-bg:nth-of-type(3) { @apply top-[70%] left-[75%]; }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const cards = document.querySelectorAll('#experience .timeline-card');
        cards.forEach(card => {
            card.addEventListener('mousemove', (e) => {
                const rect = card.getBoundingClientRect();
                const mouseEvent = e as MouseEvent;
                const x = mouseEvent.clientX - rect.left;
                const y = mouseEvent.clientY - rect.top;
                (card as HTMLElement).style.setProperty('--mouse-x', `${x}px`);
                (card as HTMLElement).style.setProperty('--mouse-y', `${y}px`);
            });
        });
    });
</script>