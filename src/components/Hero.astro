---
const details = [
    { icon: "üî≠", title: "I‚Äôm currently working on:", content: "Enhancing my knowledge in MLOps, solving LeetCode problems in Python, and preparing for my exams." },
    { icon: "üëØ", title: "I‚Äôm looking to collaborate on:", content: "Projects in Machine Learning, Data Science, Data Engineering, and solving challenging LeetCode problems‚Äîlet‚Äôs discuss time and space complexity!" },
    { icon: "ü§ù", title: "I‚Äôm looking for help with:", content: "Advanced concepts in MLOps, optimizing LeetCode solutions, and mastering algorithmic problem-solving techniques." },
    { icon: "üå±", title: "I‚Äôm currently learning:", content: "Expanding my knowledge in technology and refining my problem-solving and coding skills." },
    { icon: "üí¨", title: "Ask me about:", content: "Data Science, Machine Learning, Python Development, GCP, AWS, and deploying containerized applications using Docker." },
    { icon: "‚ö°", title: "Fun fact:", content: "I sometimes refer to my GPU as my 'co-pilot' for late-night coding marathons." }
];
// We duplicate the first item and add it to the end to create a seamless loop for the marquee
const marqueeDetails = [...details, details[0]];
---
<section id="home" class="section lg:grid lg:grid-cols-[500px_1fr] lg:gap-8 lg:items-center min-h-screen">
    
    <div class="hero-image-pane hidden lg:flex">
        <div class="hero-image-rotator relative w-[400px] h-[400px]" style="transform-style: preserve-3d; perspective: 1500px;">
            <div class="blob"></div>
            <div class="image-content-wrapper">
                <img src={`${import.meta.env.BASE_URL}/images/profile.jpg`} alt="Farhan Shahriyar Profile Picture" class="object-cover w-full h-full rounded-full"/>
            </div>
        </div>
    </div>

    <div class="hero-content-pane">
        <div class="lg:hidden flex justify-center mb-12">
             <div class="relative w-64 h-64">
                <div class="blob"></div>
                <div class="image-content-wrapper">
                     <img src={`${import.meta.env.BASE_URL}/images/profile.jpg`} alt="Farhan Shahriyar Profile Picture" class="object-cover w-full h-full rounded-full"/>
                </div>
             </div>
        </div>

        <div class="w-full text-center lg:text-left">
            <h1 id="hero-headline" class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-slate-900 dark:text-white mb-4 leading-tight break-words">
                Hi, I'm <span class="text-blue-500">Farhan Shahriyar</span>
            </h1>
            <h2 id="hero-subheading" class="text-lg sm:text-xl md:text-2xl lg:text-3xl text-slate-800 dark:text-slate-200 font-semibold mb-8">
                A Data Scientist & ML Engineer.
            </h2>
            
            <p id="about-me-summary" class="max-w-xl mx-auto lg:mx-0 text-slate-600 dark:text-slate-400 mb-10">
                Results-driven MSc Data Science student at Hamburg University of Technology with hands-on experience in Al model development, Data Engineering, and cloud-based deployments. Strong foundation in Python, ML frameworks, and big data tools. Eager to contribute to Al-driven innovations in a dynamic and collaborative environment.
            </p>

            <div id="details-marquee" class="max-w-xl mx-auto lg:mx-0">
                <div class="marquee-track-vertical">
                    {marqueeDetails.map((item) => (
                        <div class="marquee-item-vertical">
                            <h4 class="flex items-center text-lg font-semibold text-slate-800 dark:text-slate-200">
                                <span class="text-2xl mr-3">{item.icon}</span>
                                {item.title}
                            </h4>
                            <p class="pt-2 pl-10 text-slate-600 dark:text-slate-400">{item.content}</p>
                        </div>
                    ))}
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    @keyframes morph {
        0%, 100% { border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%; }
        50% { border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%; }
    }
    .hero-image-pane { @apply h-screen sticky top-0 items-center justify-center; }
    .hero-content-pane { @apply py-16 lg:py-0; }
    .blob {
        @apply absolute w-[105%] h-[105%] top-[-2.5%] left-[-2.5%];
        background: linear-gradient(45deg, var(--color-secondary), #5f9ea0);
        animation: morph 8s ease-in-out infinite;
        opacity: 0.5;
    }
    .image-content-wrapper { @apply relative w-full h-full rounded-full bg-slate-200 dark:bg-gray-800 shadow-2xl p-2 z-10; }

    #details-marquee {
        @apply relative overflow-hidden;
        height: 130px;
    }
    .marquee-track-vertical {
        @apply absolute top-0 left-0 w-full;
    }
    .marquee-item-vertical {
        @apply w-full mb-4;
        height: 130px;
    }
</style>

<script>
    import { gsap } from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";
    gsap.registerPlugin(ScrollTrigger);

    document.addEventListener('DOMContentLoaded', () => {
        // --- Headline & Scroll animations remain the same ---
        gsap.from("#hero-headline, #hero-subheading", {
            delay: 0.5, duration: 1, opacity: 0, y: 30, ease: "power3.out", stagger: 0.2
        });
        
        // NEW: Entrance animation for the About Me summary
        gsap.from("#about-me-summary", {
            delay: 0.9, // Start after the subheading
            duration: 1,
            opacity: 0,
            y: 30,
            ease: "power3.out"
        });

        const imageRotator = document.querySelector('.hero-image-rotator');
        if (imageRotator) {
            gsap.to(imageRotator, {
                scrollTrigger: { trigger: ".hero-content-pane", start: "top top", end: "bottom bottom", scrub: 1.5, },
                rotationY: -90, rotationZ: 45, ease: "power1.out"
            });
        }
        
        // --- Vertical Marquee Animation ---
        const marqueeTrack = document.querySelector('.marquee-track-vertical');
        if (marqueeTrack) {
            const detailsCount = marqueeTrack.children.length - 1;
            const marqueeItem = marqueeTrack.querySelector('.marquee-item-vertical');
            const itemHeight = marqueeItem ? (marqueeItem as HTMLElement).offsetHeight : 0;
            const totalHeight = itemHeight * detailsCount;

            gsap.to(marqueeTrack, {
                y: -totalHeight,
                duration: detailsCount * 4,
                ease: "none",
                repeat: -1
            });
        }
    });
</script>